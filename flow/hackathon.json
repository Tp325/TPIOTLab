[
    {
        "id": "23e4e6e4dca4785b",
        "type": "tab",
        "label": "HACKATON",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "bcbbfc9cfcd9a0e0",
        "type": "debug",
        "z": "23e4e6e4dca4785b",
        "name": "debug 18",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 260,
        "y": 280,
        "wires": []
    },
    {
        "id": "0fe4c3ea68b5055c",
        "type": "debug",
        "z": "23e4e6e4dca4785b",
        "name": "debug 25",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 220,
        "wires": []
    },
    {
        "id": "52ebdcb5eb814361",
        "type": "function",
        "z": "23e4e6e4dca4785b",
        "name": "Chuyển ID theo ID được cấp",
        "func": "// Kiểm tra nếu msg.payload là đối tượng JSON hoặc mảng\nlet data = msg.payload;\n\n// Khởi tạo đối tượng kết quả\nlet result = {};\n\n// Tách chuỗi dữ liệu thành mảng các phần\nlet parts = data.split(\",\");\n\n\nparts.forEach(part => {\n    let [key, value] = part.split(\":\");\n\n    // Debug giá trị key và value\n    // Kiểm tra giá trị của StationID và thay đổi nó thành id\n    if (key === \"StationID\") {\n        if (value === \"2\") {\n            result.StationID = 27;  // Thay StationID:2 thành id:27\n        } else if (value === \"3\") {\n            result.StationID = 28;  // Thay StationID:3 thành id:28\n        }\n    } else {\n        result[key] = value;  // Lưu các trường còn lại vào đối tượng\n    }\n});\n\n\n\n// Đặt đối tượng result vào msg.payload\nmsg.payload = result;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 360,
        "wires": [
            [
                "0fe4c3ea68b5055c",
                "04a46dea1c7478a1"
            ]
        ]
    },
    {
        "id": "39e26271831c2347",
        "type": "mqtt in",
        "z": "23e4e6e4dca4785b",
        "name": "",
        "topic": "Hackathon",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "4d02509b1007ac55",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 240,
        "y": 340,
        "wires": [
            [
                "bcbbfc9cfcd9a0e0",
                "52ebdcb5eb814361"
            ]
        ]
    },
    {
        "id": "fdac4adfd1e2eb09",
        "type": "function",
        "z": "23e4e6e4dca4785b",
        "name": "Xử lý dữ liệu cảm biến bụi mịn",
        "func": "// Hàm để định dạng thời gian theo \"YYYY-MM-DD HH:mm:ss\"\nfunction getFormattedTime() {\n    let now = new Date();\n    \n    let year = now.getFullYear();\n    let month = String(now.getMonth() + 1).padStart(2, '0'); // Tháng từ 0, cần cộng thêm 1\n    let day = String(now.getDate()).padStart(2, '0');\n    \n    let hours = String(now.getHours()+6).padStart(2, '0');\n    let minutes = String(now.getMinutes()).padStart(2, '0');\n    let seconds = String(now.getSeconds()).padStart(2, '0');\n    \n    return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n}\n// Dữ liệu đầu vào\nlet data = msg.payload;\n\n// Tạo đối tượng kết quả theo định dạng yêu cầu\nlet result = {\n    \"Datastream\": {\n        \"id\": String(data.StationID)  // Gán StationID vào Datastream.id\n    },\n    \"result\": [\n        {\n            \"dust\": `${(parseFloat(data.airDust) )} (ug/m^3)`,  // Chuyển giá trị airDust thành dust \n            \"battery\": `${(parseFloat(data.Battery / 4.35 * 100)).toFixed(1)} (%)`,\n            \"time\": getFormattedTime()  // Thời gian cố định\n        }\n    ]\n};\n\n// Đặt đối tượng result vào msg.payload\nmsg.payload = result;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 480,
        "wires": [
            [
                "8a3d256a0a94b79b",
                "f4df3148a1a9eb59",
                "245533a4df937e8d"
            ]
        ]
    },
    {
        "id": "8a3d256a0a94b79b",
        "type": "debug",
        "z": "23e4e6e4dca4785b",
        "name": "debug 26",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 360,
        "wires": []
    },
    {
        "id": "04a46dea1c7478a1",
        "type": "switch",
        "z": "23e4e6e4dca4785b",
        "name": "Tẻ nhánh sang function",
        "property": "payload.StationID",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "27",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "28",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 460,
        "wires": [
            [
                "fdac4adfd1e2eb09"
            ],
            [
                "7bef7121b78e11ae"
            ]
        ]
    },
    {
        "id": "7bef7121b78e11ae",
        "type": "function",
        "z": "23e4e6e4dca4785b",
        "name": "Xử lý dữ liệu cảm biến độ đục nước",
        "func": "// Hàm để định dạng thời gian theo \"YYYY-MM-DD HH:mm:ss\"\nfunction getFormattedTime() {\n    let now = new Date();\n    \n    let year = now.getFullYear();\n    let month = String(now.getMonth() + 1).padStart(2, '0'); // Tháng từ 0, cần cộng thêm 1\n    let day = String(now.getDate()).padStart(2, '0');\n    \n    let hours = String(now.getHours()).padStart(2, '0');\n    let minutes = String(now.getMinutes()).padStart(2, '0');\n    let seconds = String(now.getSeconds()).padStart(2, '0');\n    \n    return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n}\n// Dữ liệu đầu vào\nlet data = msg.payload;\n\n// Tạo đối tượng kết quả theo định dạng yêu cầu\nlet result = {\n    \"Datastream\": {\n        \"id\": String(data.StationID)  // Gán StationID vào Datastream.id\n    },\n    \"result\": [\n        {\n            \"turbidity\": `${(parseFloat(data.waterTurbidity) )} (NTU)`,  // Chuyển giá trị airDust thành dust (giả sử nhân với 15)\n            \"battery\": `${(parseFloat(data.Battery/4.35*100)).toFixed(1)} (%)`,\n            \"time\": getFormattedTime()  // Thời gian cố định\n        }\n    ]\n};\n\n// Đặt đối tượng result vào msg.payload\nmsg.payload = result;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 540,
        "wires": [
            [
                "f22d69e53c6b6907",
                "f4df3148a1a9eb59",
                "245533a4df937e8d"
            ]
        ]
    },
    {
        "id": "f22d69e53c6b6907",
        "type": "debug",
        "z": "23e4e6e4dca4785b",
        "name": "debug 27",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 500,
        "wires": []
    },
    {
        "id": "f4df3148a1a9eb59",
        "type": "mqtt out",
        "z": "23e4e6e4dca4785b",
        "name": "hackathon_sensor_request",
        "topic": "hackathon_sensor_request",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "4d02509b1007ac55",
        "x": 1260,
        "y": 440,
        "wires": []
    },
    {
        "id": "245533a4df937e8d",
        "type": "mqtt out",
        "z": "23e4e6e4dca4785b",
        "name": "",
        "topic": "Test",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "4d02509b1007ac55",
        "x": 1370,
        "y": 580,
        "wires": []
    },
    {
        "id": "cb05a64891f8929f",
        "type": "mqtt in",
        "z": "23e4e6e4dca4785b",
        "name": "",
        "topic": "hackathon_sensor_response",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "4d02509b1007ac55",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 660,
        "y": 640,
        "wires": [
            [
                "a0c7edd932c4fa3f"
            ]
        ]
    },
    {
        "id": "a0c7edd932c4fa3f",
        "type": "debug",
        "z": "23e4e6e4dca4785b",
        "name": "debug 28",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 640,
        "wires": []
    },
    {
        "id": "9517eacfa97aa033",
        "type": "inject",
        "z": "23e4e6e4dca4785b",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "StationID:2,turbidity:4.0,battery:56.0",
        "payloadType": "str",
        "x": 250,
        "y": 500,
        "wires": [
            [
                "52ebdcb5eb814361"
            ]
        ]
    },
    {
        "id": "f6e2af495871740a",
        "type": "mqtt out",
        "z": "23e4e6e4dca4785b",
        "name": "",
        "topic": "receivefromserver",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7bc933ec0a6f4209",
        "x": 1050,
        "y": 1020,
        "wires": []
    },
    {
        "id": "f3bb35c5947c388e",
        "type": "debug",
        "z": "23e4e6e4dca4785b",
        "name": "debug 48",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 280,
        "y": 1060,
        "wires": []
    },
    {
        "id": "1173d7538ce50e8e",
        "type": "mqtt in",
        "z": "23e4e6e4dca4785b",
        "name": "",
        "topic": "hackathon_tasking_sensor1",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "7bc933ec0a6f4209",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 300,
        "y": 980,
        "wires": [
            [
                "a39c31eed1fca326",
                "f3bb35c5947c388e",
                "47fc4e6672cf9f1d"
            ]
        ]
    },
    {
        "id": "431a00aa8606acb7",
        "type": "mqtt out",
        "z": "23e4e6e4dca4785b",
        "name": "",
        "topic": "tasking_response",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7bc933ec0a6f4209",
        "x": 1050,
        "y": 860,
        "wires": []
    },
    {
        "id": "a39c31eed1fca326",
        "type": "function",
        "z": "23e4e6e4dca4785b",
        "name": "success",
        "func": "msg.payload =\"success\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 860,
        "wires": [
            [
                "431a00aa8606acb7",
                "e3239e5c110fc081"
            ]
        ]
    },
    {
        "id": "53f137912d61bd02",
        "type": "mqtt in",
        "z": "23e4e6e4dca4785b",
        "name": "",
        "topic": "hackathon_tasking_sensor2",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "7bc933ec0a6f4209",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 300,
        "y": 860,
        "wires": [
            [
                "a39c31eed1fca326",
                "f80fae077d01606d",
                "47fc4e6672cf9f1d"
            ]
        ]
    },
    {
        "id": "f80fae077d01606d",
        "type": "debug",
        "z": "23e4e6e4dca4785b",
        "name": "debug 49",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 300,
        "y": 920,
        "wires": []
    },
    {
        "id": "47fc4e6672cf9f1d",
        "type": "function",
        "z": "23e4e6e4dca4785b",
        "name": "Định dạng lại dữ liệu",
        "func": "\nlet data = msg.payload;\n\nlet jsonObject = data;\n\nlet destinationID= jsonObject.value[0].id-23; \nlet sendednode = 0;\nlet ttlLimit = 2; \nlet message = jsonObject.value[0].taskingParameters;\nlet result = `${destinationID}.${sendednode}.${ttlLimit}.${message}`;\n\nmsg.payload = result; \n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1060,
        "wires": [
            [
                "d415f22d974ceb9f",
                "f6e2af495871740a"
            ]
        ]
    },
    {
        "id": "9415a387f2390494",
        "type": "inject",
        "z": "23e4e6e4dca4785b",
        "name": "true bụi mịn",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"value\":[{\"taskingParameters\":0,\"id\":25}]}",
        "payloadType": "json",
        "x": 450,
        "y": 1120,
        "wires": [
            [
                "47fc4e6672cf9f1d"
            ]
        ]
    },
    {
        "id": "d415f22d974ceb9f",
        "type": "debug",
        "z": "23e4e6e4dca4785b",
        "name": "debug 50",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 980,
        "wires": []
    },
    {
        "id": "e3239e5c110fc081",
        "type": "debug",
        "z": "23e4e6e4dca4785b",
        "name": "debug 51",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 780,
        "wires": []
    },
    {
        "id": "2a8d8aab71b44066",
        "type": "inject",
        "z": "23e4e6e4dca4785b",
        "name": "true độ đục nước",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"value\":[{\"taskingParameters\":0,\"id\":26}]}",
        "payloadType": "json",
        "x": 460,
        "y": 1260,
        "wires": [
            [
                "47fc4e6672cf9f1d"
            ]
        ]
    },
    {
        "id": "d2113b72fd47785e",
        "type": "inject",
        "z": "23e4e6e4dca4785b",
        "name": "false bụi mịn",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"value\":[{\"taskingParameters\":-1,\"id\":25}]}",
        "payloadType": "json",
        "x": 450,
        "y": 1180,
        "wires": [
            [
                "47fc4e6672cf9f1d"
            ]
        ]
    },
    {
        "id": "4b31f80884ceba53",
        "type": "inject",
        "z": "23e4e6e4dca4785b",
        "name": "false độ đục nước",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"value\":[{\"taskingParameters\":-1,\"id\":26}]}",
        "payloadType": "json",
        "x": 470,
        "y": 1340,
        "wires": [
            [
                "47fc4e6672cf9f1d"
            ]
        ]
    },
    {
        "id": "4d02509b1007ac55",
        "type": "mqtt-broker",
        "name": "iotlab",
        "broker": "dev.iotlab.net.vn",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "7bc933ec0a6f4209",
        "type": "mqtt-broker",
        "name": "hackathoncusc",
        "broker": "mqtt.cusc.vn",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    }
]